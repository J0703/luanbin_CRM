<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 配置spring注解扫描根目录 -->
    <context:component-scan base-package="com.lanou"/>

    <!-- 配置hibernate -->
    
    <!-- 1. 配置数据库连接池 -->
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/crm"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

    </bean>
    <!-- 2. sessionFactory -->
    <bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          id="sessionFactory">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--<prop key="hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>
        <property name="mappingLocations">
            <list>
                <value>classpath:resources/Department.hbm.xml</value>
                <value>classpath:resources/Post.hbm.xml</value>
                <value>classpath:resources/Staff.hbm.xml</value>
            </list>
        </property>
        <!--<property name="mappingLocations" value="classpath:resources/*.hbm.xml"/>-->
    </bean>

    <!-- 3. 配置事务对象 (切面)-->
    <bean class="org.springframework.orm.hibernate4.HibernateTransactionManager"
          id="transactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 4. 事务属性进行配置 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>

            <!-- isolation: 事务隔离级别, 处理事务并发问题 default: 默认的数据库隔离级别
            propagation: 事务的传播属性 required: 当前方法必须在事务中进行 如果有实物环境就加入, 如果没有的话 就新建事务
            read-only: 是否只读-->
            <tx:method name="add*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
            <tx:method name="update*"/>
            <tx:method name="delete*"/>
            <tx:method name="find*"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 5. 配置spring aop -->
    <aop:config>
        <!-- 配置切入点 -->
        <aop:pointcut id="pointcut" expression="execution(* com.lanou.service.impl.*.*(..))"/>
        <!-- 配置通知 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut"/>
    </aop:config>



    <bean id="staffDao"
          class="com.lanou.dao.impl.StaffDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="com.lanou.service.impl.StaffServiceImpl"
          id="userService">
        <property name="staffDao" ref="staffDao"/>
    </bean>


    <bean id="departmentDao"
          class="com.lanou.dao.impl.DepartmentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="com.lanou.service.impl.DepartmentServiceImpl"
          id="departmentService">
        <property name="departmentDao" ref="departmentDao"/>
    </bean>

    <bean id="postDao"
          class="com.lanou.dao.impl.PostDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean class="com.lanou.service.impl.PostServiceImpl"
          id="postService">
        <property name="postDao" ref="postDao"/>
    </bean>
</beans>